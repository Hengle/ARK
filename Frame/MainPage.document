#ifndef NF_MAINPAGE__H
#define NF_MAINPAGE__H


/*! \mainpage ArkGameFrame
*
* \section Features
* - General abstract data system
* - Interface-oriented programming (IOP)
* - Event-driven and data-driven
* - Extensible apps, plugins, and modules
* - High concurrency and performance by using actor model (Theron)
* - Based on the event-driven and attribute-driven can make business more clear and easy to maintenance
* - Based on C++ standard, easy to handle and learn
* - Cross platform (Include Windows and Linux)
* - Distributed server architecture
* - Use Excel as configuration files, easier for users
* - With existed Unity3D client for rapid development
*
* \subsection FAQ
* Please create a new issue to ask a question.
*
* \subsection Unity3D client
* [Unity3D Client](https://github.com/ArkGame/ArkClient-Unity3D)
*
* \section Architecture
*
* \subsection App Architecture:
* ![App Architecture](https://raw.githubusercontent.com/ArkGame/ArkGameFrame/master/Doc/asserts/imgs/AppArchitecture.png)
*
* \subsection Server Architecture
* ![Server Architecture](https://raw.githubusercontent.com/ArkGame/ArkGameFrame/master/Doc/asserts/imgs/ServerArchitecture.png)
*
* \section Get the Sources:
*
* git clone https://github.com/ArkGame/ArkGameFrame.git
*
* or
*
* svn checkout https://github.com/ArkGame/ArkGameFrame
*
*
* \section Dependencies
*
* - libevent 2.0.22
* - easylogging++ 9.80
* - mysql++ 3.2.2
* - google protobuf 2.5.0
* - pybind11 1.2
* - redis-cpp-client
* - Theron 6.00.01
* - curl 7.37.1
*
* \section Supported Compilers
*
* * GCC >= 4.8 (**Tested in Ubuntu 15.04**)
* * MSVC >= VS2015 (**Tested in Win7/10**)
*
* \section Build and Install
* \subsection MSVC >= 2015
*
* 1. Git pull all source
* 2. Run ```Dep/build_dep.bat```
* 3. Open the solution: ```Frame/Ark.sln```
* 4. Build the solution```Ark.sln```
* 5. Run ```GenerateConfigXML.bat``` to generate configuration files
* 6. Run the binary file by ```Bin/Server/Debug/Run.bat```
*
* \subsection CodeBlocks >= 13.1(Only in linux)
*
* 1. Git pull all source
* 2. Run ```Dep/build_dep.sh```
* 3. Open the solution with CodeBlocks: ```Frame/Ark.workspace```
* 4. Check ```C++11``` option in CodeBlocks compiler setting
* 5. Build ```Ark.workspace```
* 6. Run ```bash ./GenerateConfigXML.sh``` to generate configuration files
* 6. Run the binary file by ```Bin/Server/Debug/rund.sh```
*
* \section Documents
* [English](https://github.com/ArkGame/ArkGameFrame/blob/master/Doc/doc_EN.md)
*
* [Mandarin](https://github.com/ArkGame/ArkGameFrame/blob/master/Doc/doc_ZH.md)
*
* \section Samples
* Please see ```Frame/Samples```.
*
* \section License
* The ArkGameFrame project is currently available under the [Apache License](https://github.com/ArkGame/ArkGameFrame/blob/master/LICENSE).
*
*
* ----------
* \subsection C# Project
* Still working on it, maybe use Akka.net or Orleans
*
*
* Our team has always specialized in the agile development and try to help different teams to develop game project quickly and easily. After years of development, we create this frame which is a fast, scalable, distributed game server framework written by C++, include the actor library, network library, can be used as a real-time multiplayer game engine. We are still improving it.
*/