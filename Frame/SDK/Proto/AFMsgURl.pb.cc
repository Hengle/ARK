// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AFMsgURl.proto

#include "AFMsgURl.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace AFMsg {
class PackSURLParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PackSURLParam>
      _instance;
} _PackSURLParam_default_instance_;
}  // namespace AFMsg
namespace protobuf_AFMsgURl_2eproto {
void InitDefaultsPackSURLParamImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::AFMsg::_PackSURLParam_default_instance_;
    new (ptr) ::AFMsg::PackSURLParam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::AFMsg::PackSURLParam::InitAsDefaultInstance();
}

void InitDefaultsPackSURLParam() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPackSURLParamImpl);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::PackSURLParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::PackSURLParam, strurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::PackSURLParam, strgetparams_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::PackSURLParam, strbodydata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::PackSURLParam, strcookies_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::PackSURLParam, ftimeoutsec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::PackSURLParam, strrsp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::PackSURLParam, nret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::AFMsg::PackSURLParam, nreqid_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::AFMsg::PackSURLParam)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::AFMsg::_PackSURLParam_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "AFMsgURl.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016AFMsgURl.proto\022\005AFMsg\"\241\001\n\rPackSURLPara"
      "m\022\016\n\006strUrl\030\001 \001(\t\022\024\n\014strGetParams\030\002 \001(\t\022"
      "\023\n\013strBodyData\030\003 \001(\t\022\022\n\nstrCookies\030\004 \001(\t"
      "\022\023\n\013fTimeOutSec\030\005 \001(\001\022\016\n\006strRsp\030\006 \001(\t\022\014\n"
      "\004nRet\030\007 \001(\003\022\016\n\006nReqID\030\010 \001(\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 195);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AFMsgURl.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_AFMsgURl_2eproto
namespace AFMsg {

// ===================================================================

void PackSURLParam::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PackSURLParam::kStrUrlFieldNumber;
const int PackSURLParam::kStrGetParamsFieldNumber;
const int PackSURLParam::kStrBodyDataFieldNumber;
const int PackSURLParam::kStrCookiesFieldNumber;
const int PackSURLParam::kFTimeOutSecFieldNumber;
const int PackSURLParam::kStrRspFieldNumber;
const int PackSURLParam::kNRetFieldNumber;
const int PackSURLParam::kNReqIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PackSURLParam::PackSURLParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_AFMsgURl_2eproto::InitDefaultsPackSURLParam();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AFMsg.PackSURLParam)
}
PackSURLParam::PackSURLParam(const PackSURLParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strurl().size() > 0) {
    strurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strurl_);
  }
  strgetparams_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strgetparams().size() > 0) {
    strgetparams_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strgetparams_);
  }
  strbodydata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strbodydata().size() > 0) {
    strbodydata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strbodydata_);
  }
  strcookies_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strcookies().size() > 0) {
    strcookies_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcookies_);
  }
  strrsp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.strrsp().size() > 0) {
    strrsp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strrsp_);
  }
  ::memcpy(&ftimeoutsec_, &from.ftimeoutsec_,
    static_cast<size_t>(reinterpret_cast<char*>(&nreqid_) -
    reinterpret_cast<char*>(&ftimeoutsec_)) + sizeof(nreqid_));
  // @@protoc_insertion_point(copy_constructor:AFMsg.PackSURLParam)
}

void PackSURLParam::SharedCtor() {
  strurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strgetparams_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbodydata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcookies_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strrsp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ftimeoutsec_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nreqid_) -
      reinterpret_cast<char*>(&ftimeoutsec_)) + sizeof(nreqid_));
  _cached_size_ = 0;
}

PackSURLParam::~PackSURLParam() {
  // @@protoc_insertion_point(destructor:AFMsg.PackSURLParam)
  SharedDtor();
}

void PackSURLParam::SharedDtor() {
  strurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strgetparams_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbodydata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcookies_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strrsp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PackSURLParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PackSURLParam::descriptor() {
  ::protobuf_AFMsgURl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgURl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PackSURLParam& PackSURLParam::default_instance() {
  ::protobuf_AFMsgURl_2eproto::InitDefaultsPackSURLParam();
  return *internal_default_instance();
}


void PackSURLParam::Clear() {
// @@protoc_insertion_point(message_clear_start:AFMsg.PackSURLParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strgetparams_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strbodydata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strcookies_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  strrsp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ftimeoutsec_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nreqid_) -
      reinterpret_cast<char*>(&ftimeoutsec_)) + sizeof(nreqid_));
  _internal_metadata_.Clear();
}

bool PackSURLParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AFMsg.PackSURLParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string strUrl = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strurl().data(), static_cast<int>(this->strurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AFMsg.PackSURLParam.strUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strGetParams = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strgetparams()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strgetparams().data(), static_cast<int>(this->strgetparams().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AFMsg.PackSURLParam.strGetParams"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strBodyData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strbodydata()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strbodydata().data(), static_cast<int>(this->strbodydata().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AFMsg.PackSURLParam.strBodyData"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strCookies = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strcookies()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strcookies().data(), static_cast<int>(this->strcookies().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AFMsg.PackSURLParam.strCookies"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double fTimeOutSec = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &ftimeoutsec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strRsp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strrsp()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strrsp().data(), static_cast<int>(this->strrsp().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AFMsg.PackSURLParam.strRsp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 nRet = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 nReqID = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nreqid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AFMsg.PackSURLParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AFMsg.PackSURLParam)
  return false;
#undef DO_
}

void PackSURLParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AFMsg.PackSURLParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string strUrl = 1;
  if (this->strurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strurl().data(), static_cast<int>(this->strurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.PackSURLParam.strUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strurl(), output);
  }

  // string strGetParams = 2;
  if (this->strgetparams().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strgetparams().data(), static_cast<int>(this->strgetparams().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.PackSURLParam.strGetParams");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strgetparams(), output);
  }

  // string strBodyData = 3;
  if (this->strbodydata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strbodydata().data(), static_cast<int>(this->strbodydata().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.PackSURLParam.strBodyData");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->strbodydata(), output);
  }

  // string strCookies = 4;
  if (this->strcookies().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcookies().data(), static_cast<int>(this->strcookies().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.PackSURLParam.strCookies");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strcookies(), output);
  }

  // double fTimeOutSec = 5;
  if (this->ftimeoutsec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->ftimeoutsec(), output);
  }

  // string strRsp = 6;
  if (this->strrsp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strrsp().data(), static_cast<int>(this->strrsp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.PackSURLParam.strRsp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->strrsp(), output);
  }

  // int64 nRet = 7;
  if (this->nret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->nret(), output);
  }

  // int64 nReqID = 8;
  if (this->nreqid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->nreqid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:AFMsg.PackSURLParam)
}

::google::protobuf::uint8* PackSURLParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AFMsg.PackSURLParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string strUrl = 1;
  if (this->strurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strurl().data(), static_cast<int>(this->strurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.PackSURLParam.strUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strurl(), target);
  }

  // string strGetParams = 2;
  if (this->strgetparams().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strgetparams().data(), static_cast<int>(this->strgetparams().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.PackSURLParam.strGetParams");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strgetparams(), target);
  }

  // string strBodyData = 3;
  if (this->strbodydata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strbodydata().data(), static_cast<int>(this->strbodydata().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.PackSURLParam.strBodyData");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->strbodydata(), target);
  }

  // string strCookies = 4;
  if (this->strcookies().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strcookies().data(), static_cast<int>(this->strcookies().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.PackSURLParam.strCookies");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strcookies(), target);
  }

  // double fTimeOutSec = 5;
  if (this->ftimeoutsec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->ftimeoutsec(), target);
  }

  // string strRsp = 6;
  if (this->strrsp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strrsp().data(), static_cast<int>(this->strrsp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AFMsg.PackSURLParam.strRsp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->strrsp(), target);
  }

  // int64 nRet = 7;
  if (this->nret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->nret(), target);
  }

  // int64 nReqID = 8;
  if (this->nreqid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->nreqid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AFMsg.PackSURLParam)
  return target;
}

size_t PackSURLParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AFMsg.PackSURLParam)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string strUrl = 1;
  if (this->strurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strurl());
  }

  // string strGetParams = 2;
  if (this->strgetparams().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strgetparams());
  }

  // string strBodyData = 3;
  if (this->strbodydata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strbodydata());
  }

  // string strCookies = 4;
  if (this->strcookies().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strcookies());
  }

  // string strRsp = 6;
  if (this->strrsp().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strrsp());
  }

  // double fTimeOutSec = 5;
  if (this->ftimeoutsec() != 0) {
    total_size += 1 + 8;
  }

  // int64 nRet = 7;
  if (this->nret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nret());
  }

  // int64 nReqID = 8;
  if (this->nreqid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nreqid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PackSURLParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AFMsg.PackSURLParam)
  GOOGLE_DCHECK_NE(&from, this);
  const PackSURLParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PackSURLParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AFMsg.PackSURLParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AFMsg.PackSURLParam)
    MergeFrom(*source);
  }
}

void PackSURLParam::MergeFrom(const PackSURLParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AFMsg.PackSURLParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.strurl().size() > 0) {

    strurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strurl_);
  }
  if (from.strgetparams().size() > 0) {

    strgetparams_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strgetparams_);
  }
  if (from.strbodydata().size() > 0) {

    strbodydata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strbodydata_);
  }
  if (from.strcookies().size() > 0) {

    strcookies_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strcookies_);
  }
  if (from.strrsp().size() > 0) {

    strrsp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strrsp_);
  }
  if (from.ftimeoutsec() != 0) {
    set_ftimeoutsec(from.ftimeoutsec());
  }
  if (from.nret() != 0) {
    set_nret(from.nret());
  }
  if (from.nreqid() != 0) {
    set_nreqid(from.nreqid());
  }
}

void PackSURLParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AFMsg.PackSURLParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PackSURLParam::CopyFrom(const PackSURLParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AFMsg.PackSURLParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackSURLParam::IsInitialized() const {
  return true;
}

void PackSURLParam::Swap(PackSURLParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PackSURLParam::InternalSwap(PackSURLParam* other) {
  using std::swap;
  strurl_.Swap(&other->strurl_);
  strgetparams_.Swap(&other->strgetparams_);
  strbodydata_.Swap(&other->strbodydata_);
  strcookies_.Swap(&other->strcookies_);
  strrsp_.Swap(&other->strrsp_);
  swap(ftimeoutsec_, other->ftimeoutsec_);
  swap(nret_, other->nret_);
  swap(nreqid_, other->nreqid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PackSURLParam::GetMetadata() const {
  protobuf_AFMsgURl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_AFMsgURl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace AFMsg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::AFMsg::PackSURLParam* Arena::Create< ::AFMsg::PackSURLParam >(Arena* arena) {
  return Arena::CreateInternal< ::AFMsg::PackSURLParam >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
