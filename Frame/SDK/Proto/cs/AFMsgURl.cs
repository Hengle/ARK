// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: AFMsgURl.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AFMsg {

  /// <summary>Holder for reflection information generated from AFMsgURl.proto</summary>
  public static partial class AFMsgURlReflection {

    #region Descriptor
    /// <summary>File descriptor for AFMsgURl.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AFMsgURlReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5BRk1zZ1VSbC5wcm90bxIFQUZNc2cioQEKDVBhY2tTVVJMUGFyYW0SDgoG",
            "c3RyVXJsGAEgASgJEhQKDHN0ckdldFBhcmFtcxgCIAEoCRITCgtzdHJCb2R5",
            "RGF0YRgDIAEoCRISCgpzdHJDb29raWVzGAQgASgJEhMKC2ZUaW1lT3V0U2Vj",
            "GAUgASgBEg4KBnN0clJzcBgGIAEoCRIMCgRuUmV0GAcgASgDEg4KBm5SZXFJ",
            "RBgIIAEoA2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AFMsg.PackSURLParam), global::AFMsg.PackSURLParam.Parser, new[]{ "StrUrl", "StrGetParams", "StrBodyData", "StrCookies", "FTimeOutSec", "StrRsp", "NRet", "NReqID" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PackSURLParam : pb::IMessage<PackSURLParam> {
    private static readonly pb::MessageParser<PackSURLParam> _parser = new pb::MessageParser<PackSURLParam>(() => new PackSURLParam());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PackSURLParam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AFMsg.AFMsgURlReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackSURLParam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackSURLParam(PackSURLParam other) : this() {
      strUrl_ = other.strUrl_;
      strGetParams_ = other.strGetParams_;
      strBodyData_ = other.strBodyData_;
      strCookies_ = other.strCookies_;
      fTimeOutSec_ = other.fTimeOutSec_;
      strRsp_ = other.strRsp_;
      nRet_ = other.nRet_;
      nReqID_ = other.nReqID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackSURLParam Clone() {
      return new PackSURLParam(this);
    }

    /// <summary>Field number for the "strUrl" field.</summary>
    public const int StrUrlFieldNumber = 1;
    private string strUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StrUrl {
      get { return strUrl_; }
      set {
        strUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "strGetParams" field.</summary>
    public const int StrGetParamsFieldNumber = 2;
    private string strGetParams_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StrGetParams {
      get { return strGetParams_; }
      set {
        strGetParams_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "strBodyData" field.</summary>
    public const int StrBodyDataFieldNumber = 3;
    private string strBodyData_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StrBodyData {
      get { return strBodyData_; }
      set {
        strBodyData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "strCookies" field.</summary>
    public const int StrCookiesFieldNumber = 4;
    private string strCookies_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StrCookies {
      get { return strCookies_; }
      set {
        strCookies_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fTimeOutSec" field.</summary>
    public const int FTimeOutSecFieldNumber = 5;
    private double fTimeOutSec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double FTimeOutSec {
      get { return fTimeOutSec_; }
      set {
        fTimeOutSec_ = value;
      }
    }

    /// <summary>Field number for the "strRsp" field.</summary>
    public const int StrRspFieldNumber = 6;
    private string strRsp_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StrRsp {
      get { return strRsp_; }
      set {
        strRsp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nRet" field.</summary>
    public const int NRetFieldNumber = 7;
    private long nRet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NRet {
      get { return nRet_; }
      set {
        nRet_ = value;
      }
    }

    /// <summary>Field number for the "nReqID" field.</summary>
    public const int NReqIDFieldNumber = 8;
    private long nReqID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NReqID {
      get { return nReqID_; }
      set {
        nReqID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PackSURLParam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PackSURLParam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StrUrl != other.StrUrl) return false;
      if (StrGetParams != other.StrGetParams) return false;
      if (StrBodyData != other.StrBodyData) return false;
      if (StrCookies != other.StrCookies) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(FTimeOutSec, other.FTimeOutSec)) return false;
      if (StrRsp != other.StrRsp) return false;
      if (NRet != other.NRet) return false;
      if (NReqID != other.NReqID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StrUrl.Length != 0) hash ^= StrUrl.GetHashCode();
      if (StrGetParams.Length != 0) hash ^= StrGetParams.GetHashCode();
      if (StrBodyData.Length != 0) hash ^= StrBodyData.GetHashCode();
      if (StrCookies.Length != 0) hash ^= StrCookies.GetHashCode();
      if (FTimeOutSec != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(FTimeOutSec);
      if (StrRsp.Length != 0) hash ^= StrRsp.GetHashCode();
      if (NRet != 0L) hash ^= NRet.GetHashCode();
      if (NReqID != 0L) hash ^= NReqID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StrUrl.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StrUrl);
      }
      if (StrGetParams.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StrGetParams);
      }
      if (StrBodyData.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(StrBodyData);
      }
      if (StrCookies.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StrCookies);
      }
      if (FTimeOutSec != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(FTimeOutSec);
      }
      if (StrRsp.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(StrRsp);
      }
      if (NRet != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(NRet);
      }
      if (NReqID != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(NReqID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StrUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StrUrl);
      }
      if (StrGetParams.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StrGetParams);
      }
      if (StrBodyData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StrBodyData);
      }
      if (StrCookies.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StrCookies);
      }
      if (FTimeOutSec != 0D) {
        size += 1 + 8;
      }
      if (StrRsp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StrRsp);
      }
      if (NRet != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NRet);
      }
      if (NReqID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NReqID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PackSURLParam other) {
      if (other == null) {
        return;
      }
      if (other.StrUrl.Length != 0) {
        StrUrl = other.StrUrl;
      }
      if (other.StrGetParams.Length != 0) {
        StrGetParams = other.StrGetParams;
      }
      if (other.StrBodyData.Length != 0) {
        StrBodyData = other.StrBodyData;
      }
      if (other.StrCookies.Length != 0) {
        StrCookies = other.StrCookies;
      }
      if (other.FTimeOutSec != 0D) {
        FTimeOutSec = other.FTimeOutSec;
      }
      if (other.StrRsp.Length != 0) {
        StrRsp = other.StrRsp;
      }
      if (other.NRet != 0L) {
        NRet = other.NRet;
      }
      if (other.NReqID != 0L) {
        NReqID = other.NReqID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StrUrl = input.ReadString();
            break;
          }
          case 18: {
            StrGetParams = input.ReadString();
            break;
          }
          case 26: {
            StrBodyData = input.ReadString();
            break;
          }
          case 34: {
            StrCookies = input.ReadString();
            break;
          }
          case 41: {
            FTimeOutSec = input.ReadDouble();
            break;
          }
          case 50: {
            StrRsp = input.ReadString();
            break;
          }
          case 56: {
            NRet = input.ReadInt64();
            break;
          }
          case 64: {
            NReqID = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
